// SPDX-FileCopyrightText: Copyright 2025 Carabiner Systems, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: v1/verification.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Results of the signature verification process
type Verification struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Signature     *SignatureVerification `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Verification) Reset() {
	*x = Verification{}
	mi := &file_v1_verification_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Verification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Verification) ProtoMessage() {}

func (x *Verification) ProtoReflect() protoreflect.Message {
	mi := &file_v1_verification_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Verification.ProtoReflect.Descriptor instead.
func (*Verification) Descriptor() ([]byte, []int) {
	return file_v1_verification_proto_rawDescGZIP(), []int{0}
}

func (x *Verification) GetSignature() *SignatureVerification {
	if x != nil {
		return x.Signature
	}
	return nil
}

type SignatureVerification struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Date when the verification was performed
	Date *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	// SignatureVerified is set to true when a hash's signature was verified
	// with at least one key or cert. Verified does not imply any identity check.
	Verified bool `protobuf:"varint,2,opt,name=verified,proto3" json:"verified,omitempty"`
	// Identities has a list of the identities (sigstore signers or keys)
	// that signed the object.
	Identities    []*Identity `protobuf:"bytes,3,rep,name=Identities,proto3" json:"Identities,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignatureVerification) Reset() {
	*x = SignatureVerification{}
	mi := &file_v1_verification_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignatureVerification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignatureVerification) ProtoMessage() {}

func (x *SignatureVerification) ProtoReflect() protoreflect.Message {
	mi := &file_v1_verification_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignatureVerification.ProtoReflect.Descriptor instead.
func (*SignatureVerification) Descriptor() ([]byte, []int) {
	return file_v1_verification_proto_rawDescGZIP(), []int{1}
}

func (x *SignatureVerification) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *SignatureVerification) GetVerified() bool {
	if x != nil {
		return x.Verified
	}
	return false
}

func (x *SignatureVerification) GetIdentities() []*Identity {
	if x != nil {
		return x.Identities
	}
	return nil
}

var File_v1_verification_proto protoreflect.FileDescriptor

const file_v1_verification_proto_rawDesc = "" +
	"\n" +
	"\x15v1/verification.proto\x12\x13carabiner.policy.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x0fv1/policy.proto\"X\n" +
	"\fVerification\x12H\n" +
	"\tsignature\x18\x01 \x01(\v2*.carabiner.policy.v1.SignatureVerificationR\tsignature\"\xa2\x01\n" +
	"\x15SignatureVerification\x12.\n" +
	"\x04date\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\x04date\x12\x1a\n" +
	"\bverified\x18\x02 \x01(\bR\bverified\x12=\n" +
	"\n" +
	"Identities\x18\x03 \x03(\v2\x1d.carabiner.policy.v1.IdentityR\n" +
	"IdentitiesB\xc2\x01\n" +
	"\x17com.carabiner.policy.v1B\x11VerificationProtoP\x01Z&github.com/carabiner-dev/policy/api/v1\xa2\x02\x03CPX\xaa\x02\x13Carabiner.Policy.V1\xca\x02\x13Carabiner\\Policy\\V1\xe2\x02\x1fCarabiner\\Policy\\V1\\GPBMetadata\xea\x02\x15Carabiner::Policy::V1b\x06proto3"

var (
	file_v1_verification_proto_rawDescOnce sync.Once
	file_v1_verification_proto_rawDescData []byte
)

func file_v1_verification_proto_rawDescGZIP() []byte {
	file_v1_verification_proto_rawDescOnce.Do(func() {
		file_v1_verification_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_v1_verification_proto_rawDesc), len(file_v1_verification_proto_rawDesc)))
	})
	return file_v1_verification_proto_rawDescData
}

var file_v1_verification_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_v1_verification_proto_goTypes = []any{
	(*Verification)(nil),          // 0: carabiner.policy.v1.Verification
	(*SignatureVerification)(nil), // 1: carabiner.policy.v1.SignatureVerification
	(*timestamppb.Timestamp)(nil), // 2: google.protobuf.Timestamp
	(*Identity)(nil),              // 3: carabiner.policy.v1.Identity
}
var file_v1_verification_proto_depIdxs = []int32{
	1, // 0: carabiner.policy.v1.Verification.signature:type_name -> carabiner.policy.v1.SignatureVerification
	2, // 1: carabiner.policy.v1.SignatureVerification.date:type_name -> google.protobuf.Timestamp
	3, // 2: carabiner.policy.v1.SignatureVerification.Identities:type_name -> carabiner.policy.v1.Identity
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_v1_verification_proto_init() }
func file_v1_verification_proto_init() {
	if File_v1_verification_proto != nil {
		return
	}
	file_v1_policy_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_v1_verification_proto_rawDesc), len(file_v1_verification_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_v1_verification_proto_goTypes,
		DependencyIndexes: file_v1_verification_proto_depIdxs,
		MessageInfos:      file_v1_verification_proto_msgTypes,
	}.Build()
	File_v1_verification_proto = out.File
	file_v1_verification_proto_goTypes = nil
	file_v1_verification_proto_depIdxs = nil
}
